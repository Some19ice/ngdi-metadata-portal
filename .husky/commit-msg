# This hook validates commit messages to ensure they follow a standard format
# You can customize this to enforce your team's commit message conventions

# Example: Check if commit message starts with a type (feat, fix, docs, etc.)
commit_msg_file=$1
commit_msg=$(cat "$commit_msg_file")

# Simple regex to check if commit message follows conventional commits format
# Format: <type>(<scope>): <description>
# Example: feat(auth): add login functionality
if ! echo "$commit_msg" | grep -qE '^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\([a-z0-9-]+\))?: .+$'; then
  echo "❌ Invalid commit message format."
  echo "Commit message should follow the format: <type>(<scope>): <description>"
  echo "Example: feat(auth): add login functionality"
  echo "Types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert"
  exit 1
fi

echo "✅ Commit message format is valid!"
